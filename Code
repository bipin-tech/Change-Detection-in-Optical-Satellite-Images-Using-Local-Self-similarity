import cv2
import numpy as np
import matplotlib.pyplot as plt
from PIL import Image as imm
from sklearn.metrics import accuracy_score
def diff1(i,j,k,l):
    global sum1
    for p in range(-1,2):
        for q in range(-1,2):
            sum1=sum1+(int(image[i+p][j+q])-int(image[k+p][l+q]))**2
    sum1=2.72**(0-sum1)

def diff2(i,j,k,l):
    global sum1
    
    for p in range(-1,2):
        for q in range(-1,2):
            sum1+=(int(image2[i+p][j+q])-int(image2[k+p][l+q]))**2
    sum1=2.72**(0-sum1)

def fun(i,j):
    m=0
    for k in range(-2,3):
        for l in range(-2,3):
            global sum1
            sum1=0
            diff1(i,j,i+k,j+l)
            Th.append(sum1)
            if(sum1!=0):
                m=m+1
            sum1=0
            diff2(i,j,i+k,j+l)
            Th2.append(sum1)
            if(sum1!=0):
                m=m+1
    t=0
    if(m!=0):
        t=(sum(Th)+sum(Th2))/m
    
    for k in range(25):
        if(abs(t)>abs(Th[k])):
            a1.append(0)
        else:
            a1.append(1)
    for k in range(25):
        if(abs(t)>abs(Th2[k])):
            b1.append(0)
        else:
            b1.append(1)
    for k in range(25):
        xora.append(a1[k]^b1[k])
    n1=0
    for k in range(25):
        if(xora[k]==1):
            n1=n1+1
    if(n1>6):
        return 0
    return 1


im = cv2.imread("set11.tif", 0)
im2 = cv2.imread("set12.tif", 0)
image = cv2.copyMakeBorder(im, 3, 3, 3, 3, cv2.BORDER_CONSTANT)
image2 = cv2.copyMakeBorder(im2, 3, 3, 3, 3, cv2.BORDER_CONSTANT)


r=image.shape[0]
c=image.shape[1]

ans= np.full((r,c),0)

global sum1
sum1=0

for i in range(2,r-3):
    for j in range(2,c-3):
        Th=[]
        Th2=[]
        a1=[]
        b1=[]
        xora=[]
        ans[i][j]=fun(i,j)

out = np.array(ans, dtype=np.uint8)
new=((out/1)*255.9).astype(np.uint8)

new=((ans/1)*255.9).astype(np.uint8)

plt.subplot(221), plt.imshow(image,'gray'),plt.title("image1 "),plt.axis('off')
plt.subplot(222), plt.imshow(image2,'gray'),plt.title("image2"),plt.axis('off')
plt.subplot(223), plt.imshow(out,'gray'),plt.title("image ch"),plt.axis('off')
plt.show()
result=new[ 3:r-3, 3:c-3 ]
ground = cv2.imread("gt1.tif",0)
a=result.flatten()
b=ground.flatten()
accuracy = accuracy_score(a, b)
print("Accuracy:", accuracy)

r=200
c=200

TP=0
TN=0
FP=0
FN=0
N1=0
N0=0

for i in range(0,r):
    for j in range(0,c):
        if(ground[i][j] == result[i,j]):
                if(ground[i][j]==0):
                     TP=TP+1
                else:
                     TN=TN+1
        else:
                if(ground[i][j]==0):
                    FN=FN+1
                else:
                    FP=FP+1
        if(ground[i][j]==0):
             N0=N0+1
        else:
             N1=N1+1
PCC =((TP +TN)/(N0+N1)*100)
PFP = FP/(N1)
PTE = ((FP +FN)/(N0+N1))*100
print("PCC= ",PCC,"\nPFP=",PFP,"\nPTE=",PTE,"\n")
